// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  username   String   @unique
  password String
  name    String?
  phoneNumber Int?
  CurrentCity String?
  userPoints Int?
  education Education?
  skills Skills?
  
}
model Education{
  id Int  @id @default(autoincrement()) 
  collegeName String
  degree String
  cgpa Int
  branch String
  startDate String
  endDate String
  userId Int @unique
  user User @relation(fields: [userId],references: [id])
}
model Skills{
  skillid Int @id @default(autoincrement())
  modeOfInternship String
  portfolio Portfolio?
  project Project[]
  additonalDetails AdditonalDetails?
  userId Int @unique
  user User @relation(fields: [userId],references: [id])

}
model Portfolio{
  id Int @id @default(autoincrement())
  githubLink String?
  leetCodeLink String?
  figmaLink String?
  skillId Int @unique
  skill  Skills @relation(fields: [skillId],references: [skillid])
}
model Project{
  id Int @id @default(autoincrement())
  projectName String
  skillUsed String[]
  projectLink String?
  description String?
   skillId Int 
  skill  Skills @relation(fields: [skillId],references: [skillid])
  
}
model AdditonalDetails{
  id Int @id @default(autoincrement())
  linkedinLink String?
  competitiveRank String?
  POR String?
  internship String?
  skillId Int @unique
  skill  Skills @relation(fields: [skillId],references: [skillid])

}
